version: '3.8'

services:
  bet-maker:
    build:
      context: .
      dockerfile: bet-maker/Dockerfile.BetMaker
    volumes:
      - ./bet-maker:/app
    ports:
      - "8800:8800"
    depends_on:
      db:
        condition: service_healthy
      line-provider:
        condition: service_started
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=your_user
      - POSTGRES_PASSWORD=your_password
      - POSTGRES_DB=your_db_name
      - PROJECT_NAME=bet-maker
      - LINE_PROVIDER_BASE_URL=http://line-provider:9909
    networks:
      - bet-network

  line-provider:
    build:
      context: .
      dockerfile: line_provider/Dockerfile.LineProvider
    volumes:
      - ./line_provider:/app
    ports:
      - "9909:9909"
    networks:
      - bet-network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=your_user
      - POSTGRES_PASSWORD=your_password
      - POSTGRES_DB=your_db_name
    ports:
      - "5432:5432"
    networks:
      - bet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U your_user -d your_db_name"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    networks:
      - bet-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    networks:
      - bet-network
    depends_on:
      - bet-maker

volumes:
  postgres_data:

networks:
  bet-network:
    driver: bridge